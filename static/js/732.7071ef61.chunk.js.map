{"version":3,"file":"static/js/732.7071ef61.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n\n\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\ndisplay: flex;\n  flex-direction: column;\n  margin-bottom: 20px;`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 0.25em;\n`;\n\nexport const Input = styled.input`\n padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 6px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #20212447;\n`;\nexport const Button = styled.button`\n  margin-top: 5px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n  :hover {\n    background-color: #e0e0e0;\n  }\n`;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import Notiflix from 'notiflix';\nimport { addContacts } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { Form, Label, Button, Input } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  // console.log(contacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // if (name.trim() === '' || number.trim() === '') {\n    //   return;\n    // }\n\n    const isContactExist = contacts.find(\n       contact  => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    // console.log(number);\n    // console.log(name);\n    console.log(contacts);\n\n\n    if (isContactExist) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const isNumberExist = contacts.find(\n       contact  => contact.number.toLowerCase().trim() === number.toLowerCase().trim()\n    );\n\n    if (isNumberExist) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContacts({name, number}));\n    setName('');\n    setNumber('');\n  };\n\n  // const handleChange = event => {\n  //   const { name, value } = event.target;\n\n  //   switch (name) {\n  //     case 'name':\n  //       setName(value);\n  //       break;\n  //     case 'number':\n  //       setPhone(value);\n  //       break;\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNumber(event.target.value);\n  };\n\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\" >\n      <Label>\n        Name\n        </Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n          required\n          // placeholder=\"Enter name\"\n          value={name}\n        onChange={handleNameChange}   \n        />\n\n      <Label>\n        Number\n        </Label>\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n           value={number}\n        onChange={handlePhoneChange}\n        />\n      \n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\nexport default ContactForm;","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactName = styled.p`\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 20px;  \n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n    :hover {\n    background-color: #e0e0e0;\n    }\n`;","import { useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { deleteContacts } from 'redux/operations';\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n} from './ContactListItem.styled';\n\nexport const ContactsListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContacts(contact.id));\n  };\n\n  return (\n    <ContactItem>\n      <ContactName>\n        {contact.name}:<ContactNumber>{contact.number}</ContactNumber>\n      </ContactName>\n      <Button onClick={handleDeleteContact}>Delete</Button>\n    </ContactItem>\n  );\n}\n\n// ContactItem.propTypes = {\n//   contact: PropTypes.object.isRequired,\n// };\n\nexport default ContactItem;","import { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ProgressBar\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"progress-bar-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"progress-bar-wrapper\"\n    borderColor=\"#100c08\"\n    barColor=\"#e0e0e0\"\n  />\n);","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/selectors';\nimport {ContactsListItem}  from 'components/ContactListItem/ContactListItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchContacts } from 'redux/operations';\n\nexport const ContactList = () =>  {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error ? (\n        <Loader />\n      ) : filteredContacts.length === 0 && !error ? (\n        <p>The Phonebook is empty. Add your first contact.</p>\n      ) : (\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactsListItem key={id} contact={{ id, name, number }} />\n        ))\n      )}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  padding: 5px;\n  border-radius: 6px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #20212447;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  // console.log(filter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value.trim()));\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search by name\"\n      value={filter}\n      onChange={handleFilterChange}\n      disabled={useSelector(selectContacts).length === 0}\n    />\n  );\n};\n\nexport default Filter;","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook📱</title>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","onSubmit","event","preventDefault","isContactExist","find","contact","trim","console","log","alert","concat","addContacts","autoComplete","children","_jsx","type","pattern","title","required","value","onChange","target","placeholder","ContactItem","ContactName","ContactNumber","ContactsListItem","onClick","deleteContacts","id","Loader","ProgressBar","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","filteredContacts","useEffect","fetchContacts","length","map","setFilter","disabled","_Fragment","HelmetProvider","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}